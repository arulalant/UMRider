##############################################################################
## setup configure file: Used to setup indata path, outdata path, temporary ##
## path to run the um2grb2 python parallel scripts which will create        ##
## analysis and forecast files.                                             ##
##                                                                          ##
## NCUM GLOBAL MODEL VSDB INPUT PREPARATION PROCESSING SETUP CONFIGURE FILE ##
##                                                                          ##
## Author : Arulalan <arulalan@ncmrwf.gov.in>                               ##
## Updated : 09-Feb-2016                                                    ##
##############################################################################

###################### User Defined Arguments Begin ##########################

## By default startdate takes argument as YYYYMMDD (which means it assume today's date)
## But user can specify the different startdate by follwing the same format.
## for eg, startdate = 20151209 # then it will execute the scripts for 09-Dec-2015.
## startdate = YYYYMMDD # then it will execute the scripts for today's date.
## Note : However UMRIDER_STARTDATE environment variable will override this startdate option.

startdate = YYYYMMDD

## By default enddate is None. User can specify different enddate (but > startdate)
## i.e. for only specfied date / one date, user needs to control only in the 
## startdate and enddate must be None. If user want to execute the um2grb2
## conversion for the range of dates, then user need to set the lower startdate
## end higher enddate. enddate could be even YYYYMMDD, but make sure that
## startdate is lower than enddate.
## For eg : startdate = 20151209 and enddate = 20160114 , then um2grb2
## conversion program executes from 09-dec-2015 to 14-jan-2016.
## Note : However UMRIDER_ENDDATE environment variable will override this enddate option.

enddate = None

##############################################################################
########### CAUTION DO NOT TOUCH BELOW CONFIGURE SETUP LINES  ################
##############################################################################

########### BEGIN OF UMRIDER SETUP CONFIGURE FOR um2grb2 SCRIPTS #############

## UM model type takes either 'global' or 'regional' or 'ensemble'. By default
## it takes 'global' as argument.
UMtype = global

## UMInAnlFiles takes list of absolute filenames which has correct analysis 
## fieldsfile/pp file of UM model valid at 00UTC.
## None option will take hardcoded proper infile names.
UMInAnlFiles = ['qwqg00.pp0']

## UMInShortFcstFiles takes list of partial filenames which has short forecast 
## (kind of analysis) fieldsfile/pp files of UM model produced for 00UTC, 06UTC, 12UTC, 18UTC.
## None option will take hardcoded proper infile names.
UMInShortFcstFiles = ['umglca_pb', 'umglca_pd', 'umglca_pe', 'umglca_pf', 'umglca_pi']

## UMInLongFcstFiles takes list of partial filenames which has long forecast 
## fieldsfile/pp file of UM model based on reference time at 00UTC, 12UTC.
## None option will take hardcoded proper infile names.
UMInLongFcstFiles = ['umglaa_pb','umglaa_pd', 'umglaa_pe', 'umglaa_pf', 'umglaa_pi']

## model pp filedsfiles path 
inPath = /gpfs3/home/umfcst/NCUM/fcst/*YYYYMMDD*/*ZZ*/

## model grib2 files path
outPath = /gpfs3/home/umfcst/ShortJobs/VSDB_Input/1x1/*YYYYMMDD*/

## working directory (used to create temporary log files)
tmpPath = /gpfs3/home/umfcst/UMRiderLogs/vsdb/

## analysis step/interval hours. By default it takes 6 hour which mean
## um2grb2 produce 6 hourly instantaneous and/or 6 hourly average and/or 
## 6 hourly accumulation values analysis files.
## If user specfied as 3 then it will extract only 3 houlry instantaneous fields.
## By default model produced 3 hourly average/accumulation.
## Note: the average and accumulation supports only for 6 hours!!!
anl_step_hour = 6

## anl_aavars_reference_time takes either 'analysis' or 'shortforecast'. When some 
## variables are taken from previous cycle short-forecast (average/accumulation)
## vars, the reference time need to be set as either current 'analysis' reference 
## cycle (utc) or previous cycle's 'shortforecast' reference time.
## 'shortforecast' gives exactly based on which utc that variable has processed,
## whereas 'analysis' shift reference time utc as actual analysis utc time.
## Note : This option applicable only to average/accumulation vars in analysis grib2 files.
## Lets keep default option (i.e. shortforecast)
anl_aavars_reference_time = shortforecast

## anl_aavars_time_bounds takes either 'True' or 'False'. By default, True keeps the 
## analysis time bounds, reference time bounds and False removes it (so that 
## it become instantaneous instead of average/accumulation vars).
## False will be applicable only if anl_aavars_reference_time arg passed as 'analysis'.
## Note : This option applicable only to average/accumulation vars in analysis grib2 files.
## For VSDB, we keeps the time bounds on till date.
anl_aavars_time_bounds = True

## long forecast step/interval hours . By default it 
## takes 6 hour which mean um2grb2 produce 6 hourly instantaneous and/or   
## 6 hourly average and/or 6 hourly accumulation values.
## If user specfied as 3 or 24 then it will extract only 3 or 24 houlry 
## instantaneous fields and for calculate average/accumulation for 24 hourly.
## By default model produced 3 hourly average/accumulation.
## Note: the average and accumulation supports only for either 3 or 6 or 24 hours!!!
fcst_step_hour = 24 # for vsdb input we need to feed as 24 hourly data 

## long forecast start hour. By default it 
## takes 6 hour which mean um2grb2 produce grib2 files from 06-th hour forecasts.
## If user wants from different hours, then they can specify it !
## It should be multiples of 'fcst_step_hour' (see above option)!
start_long_fcst_hour = 24 # for vsdb input we need to feed as 24 hourly data 

## maximum long forecast hours at 00utc cycle produced by NCUM model
## for 10days forecast 240hour (by default 240 hours)
end_long_fcst_hour_at_00z = 240

## maximum long forecast hours at 12utc cycle produced by NCUM model
## for 5days forecast 120hour (by default 120 hours)
end_long_fcst_hour_at_12z = 120

## latitude is required latitude which user wants to extract from the model
## global data. By default it takes None (i.e. extract model global latitudes)
## User can specify their required latitude in tuple 
## For eg : latitude = (-30, 30) will extract only latitudes from 30S to 30N.
latitude = None

## longitude is required longitude which user wants to extract from the model
## global data. By default it takes None (i.e. extract model global longitudes)
## User can specify their required longitude in tuple 
## For eg : longitude = (60, 100) will extract only longitude from 60E to 100E.
## Note : Model requires longitude should specfied based on (0 to 360), and 
## not by (-180 to 180.) In future I may fix it, if user wish to specify 
## longitude by within range of (-180, 180)
longitude = None

## targetGridResolution is resolution in degree (1 degree = 100km approx)
## if targetGridResolution is set to None, then model resolution will be 
## kept in the grib2 file. This must be a number or None.
## WARNING :  targetGridResolution option will be disabled if targetGridFile enabled.
targetGridResolution = 1.0

## targetGridFile should be path of sample grib2 / pp / ff / nc file, which 
## contains atleast one variable with latitude, longitude informations. Model 
## variables will be converted to this target grid file resolution including
## spatial regrid, start-end of latitude-and-longitude.
targetGridFile = None

## extraPolateMethod takes either 'auto' or 'linear' or 'mask' or iris supported
## interpolation method. 'linear' means all variables will be linearly extrapolated
## over masked regions also. 'mask' means all masked variables of model outputs,
## will not be extrapolated over masked regions.
## 'auto' will take care properly the neccessary variabels will be extrapolated 
## over masked regions and remaining variables will be masked over mask regions.
## 'auto' options is suggested one!
extraPolateMethod = linear

## pressureLevels is required pressure levels slice / extract only particular
## set of pressure levels from model pressure levels. User can specify either 
## one or more levels. By default it takes None, i.e. it will extract all the 
## model pressure levels. 
## For eg 1 : pressureLevels = [850]   -> extract 850 hPa only 
## For eg 2 : pressureLevels = [850, 500, 200] -> extract only 850, 500 & 200 hPa levels only.
## Note 1 : These pressure slice levels applicable to all the pressure level variables.
## Note 2 : At the moment pressure levels interpolation is not supported!
pressureLevels = None

## If some variable has fully masked (for eg: Incoming Shortwave flux during
## night time) then this option value will be set to that variable. By default
## it takes None, which wont do anything. If it has set to 0 as value, then 
## those fully masked vars will be filled with this value.
fillFullyMaskedVars = None

## soilFirstSecondFixedSurfaceUnit takes either 'cm' or 'mm'. By default it 
## takes 'cm' argument (suggested for general purpose/ WRF-Noah supported).
## For soil moisture/ soil temeperature variables depth below land surface,
## units are initially set to either 'cm' (centimeter) or 'mm' (millimeter), 
## and finally converted to 'm' (meter) in wgrib2. But anyhow if grib2 files 
## will be ready by some other utility other than wgrib2, then this first &
## second fixed surface units plays matter. So suggested units is 'cm'.
soilFirstSecondFixedSurfaceUnit = cm

## Load g2utils from 'system' python which has installed through setup.py (OR)
## Load g2utils from 'local' previous directory for the operational purpose, 
## where normal user don't have write permission to change the g2utils!
## So loadg2utils argument should be either system (default) or local.  
loadg2utils = local

## If overwriteFiles option is 'True' then existing output final files (if any) 
## will be deleted from outPath and re-creating freshly. 
## If overwriteFiles option is 'False' and all output final files are already 
## exists in the outPath, then program will be exited without re-creating the 
## output files.
## If partially created files exist (like few hours outfiles only exist or 
## intermediate nc files) then by default make overwriteFiles option as True
## (though False as passed to overwriteFiles option).
overwriteFiles = True 

## anlOutGrib2FilesNameStructure and fcstOutGrib2FilesNameStructure takes 
## list of string naming arguments to construct out file names. 
## um2grb2 will just concatinate the arguments, by replacing 3 predefined 
## naming structure ('*HHH*', '*YYYYMMDD*', '*ZZ*') with its corresponding 
## values/numbers inplace of it.
## '*H*' - forecast hours
## '*D*' - forecast days (applicable only for multiples of 24 hours)
## Note : Either '*H*' or '*D*' valid, not both!
## '*YYYYMMDD*' - forecast reference date 
## '*%d%m%y*' - Alternate to above '*YYYYMMDD*' option. User can specify any 
## acceptable time strftime format. um2grb2 will figure it by finding '%' symbol.
## '*Z*' - forecast reference utc time (optional)
## If user wants to 3 digit filled hours, then they need to specify as 3 times 
## '*HHH*'. If they specify 2 digit filled hours (say '*HH*' only), but forecast
## hours have 3 digit, then by default it will assume as 3 digits but for 
## single digit hour, it will fill 0 as prefix to make it as 2 digit.
## same option for utc '*Z*'.
## Note : * will not be included in the name of the final out grib2 files.
## eg1 :  ('um_ana', '_', '*HHH*', 'hr', '_', '*YYYYMMDD*', '_', '*ZZ*', 'Z', '.grib2')  
## this will produce grib2 files as 'um_ana_006hr_20160208_12Z.grib2'
## eg2 : ('fcs', '_', '*HH*', 'h', '_z', '*YYYYMMDD*', '.grb2') this will 
## produce grib2 files as 'fcs_06h_z20160208.grb2'
## eg3 : ('prg', '*D*', '00z', '*%d%m%y*', '.grb2') will produce grib2 files 
## as 'prg100z080216.grb2' 
## eg4 : ('prg', '*D*', '00z', '*%d%m%y*', '_', '*pxp*' '.grb2') will produce grib2 files 
## as 'prg100z080216_0p17x0p17.grb2' in case of targetGridResolution = None (i.e modelResolution)  
## or as 'prg100z080216_2p5x2p5.grb2' in case of targetGridResolution = 2.5

## Defining analysis grib2 fileName structure. Must be in single line.
anlOutGrib2FilesNameStructure = ('prg', '*H*', '00z', '*%d%m%y*', '.grb2')

## Defining forecast grib2 fileName structure. Must be in single line.
fcstOutGrib2FilesNameStructure = ('prg', '*D*', '00z', '*%d%m%y*', '.grb2')

## If createCtlIdxFiles is True then um2grb2 module will create grads control 
## files and its index files for each and every grib2 files by using g2ctl.pl 
createGrib2CtlIdxFiles = False

## If convertGrib2FilestoGrib1Files is True then using 'cnvgrib -g21' command 
## line um2grb2 module will convert grib2 file to grib1 files.
## CAUTION : it may produce invalid variables names, grib1 param code for few 
## variables which are produced by this um2grib2 conversion tool!!! 
convertGrib2FilestoGrib1Files = True

## If grib1FilesNameSuffix is '.grib1', then grib1 files will endswith '.grib1' (default).
## otherwise will whatever string assigned will be added at the end of grib1 
## file names. None will add nothing to grib1 file names at the end of it. 
grib1FilesNameSuffix = None

## If removeGrib2FilesAfterGrib1FilesCreated is True, then grib2 files will be 
## deleted and kept only grib1 files. By default False.
removeGrib2FilesAfterGrib1FilesCreated = True

## If createCtlIdxFiles is True then um2grb2 module will create grads control 
## files and its index files for each and every grib1 files by using grib2ctl.pl 
createGrib1CtlIdxFiles = False

## This debug option should be either True or False. This will just print 
## extra informations like varibles details, shape, execution process, etc.,
debug = False

## setGrib2TableParameters option takes list of tuples which may contain 
## WMO-Grib2 table parameters and its value. Which means, the grib2 table 
## parameter options will be overwritten as per user's setting in this option.
## eg1 : setGrib2TableParameters = [('centre', 28), ('subCentre', 0)]
## The above two options will be set to out grib2 files. 
## eg2 : setGrib2TableParameters = [('shapeOfTheEarth', 0)]
## The above option will be set to out grib2 files. 
## CATUION : User must be aware on what are they setting in this option and 
## its causes in out grib2 files! By default this option takes None.
setGrib2TableParameters = None

## After successfully created the grib2 (final ordered variabels) file, 
## wgrib2 commnad will be executed with the 'wgrib2Arguments' options.
## pygrib/IRIS/UMRider is able to write grib2 file with "grid_simple" packing
## algorithm, whereas wgrib2 able to convert packing from "grid_simple" to 
## "grid_complex_spatial_differencing" by setting -set_grib_type complex2
## option in it. The second type packing reduces file size 1/3 compare to first 
## type packing. And further can be reduced the file size, by passing 
## -set_bin_prec 12 (compatible same as ECMWF) which reduces the floating points
## precision (which further reduces the file size 1/5 th of original of first
## packing). By default wgrib2Arguments takes "-set_grib_type complex2 -grib_out"
## as argument. User can override this option by including extra wgrib2 arguments
## Or None (wgrib2 will not be executed). 
## -grib_out is important argument (to be compress, set precsion, etc)
## http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/speed.html
## http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/set_bin_prec.html
##
wgrib2Arguments = -set_bin_prec 12 -set_grib_type complex2 -grib_out

## This callBackScript option takes any user defined script (any script)!
## User should provide absolute or relative path of their script and make sure 
## that script is self executable with shebang and executable permission!
## After successfully created out grib2 files, this callBackScript will be 
## executed with possibly command line keyword arguments as follows 
## KWargs : (date, outpath, oftype, utc)
## where '--date' -> out files processed date,
##       '--outpath' -> out files path,
##       '--oftype'  -> 'analysis' or 'forecast'
##       '--utc'  -> UTC cycle value in string ('00' or '06' or '12' or '18')  
callBackScript = None

##### END OF UMRIDER SETUP CONFIGURE FOR um2grb2 SCRIPTS ######
